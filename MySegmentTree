//https://cses.fi/problemset/task/1648/
//https://cses.fi/problemset/result/4179063/
//
#include <bits/stdc++.h>
#define int  long long int
#define pb push_back
#define all(x) (x).begin(),(x).end()
#define INF 1ll<<62
using namespace std;
 
const int N=2*100000+5;
 
int a[N];
int cal[N*4];
 
int merge(int x,int y)
{
	return (x+y);
}
int Identity=0;
 
void Build(int x,int ss,int se)
{
	if(ss==se) cal[x]=a[ss];
	else
	{
		int mid=(ss+se)/2;
		Build(2*x,ss,mid);         // build left
		Build(2*x+1,mid+1,se);     // build right
		cal[x]=merge(cal[2*x],cal[2*x+1]);  // merging nodes
	}
}
 
int query(int l,int r,int s,int e,int x)
{
	if(r<s or e<l) return Identity;
	else if(l<=s and e<=r) return cal[x]; 
	else 
	{	
		int mid=(s+e)/2;
		return merge(query(l,r,s,mid,2*x),query(l,r,mid+1,e,2*x+1));
	}
}
 
void Update(int x,int q,int val,int s,int e)
{	
	if(s==e)
	{	
		a[q]=val;
		cal[x]=val;
		return;
	}
	int mid=(s+e)/2;
	if(q<=mid) Update(2*x,q,val,s,mid);
	else Update(2*x+1,q,val,mid+1,e);
	
	cal[x]=merge(cal[2*x+1],cal[2*x]);
}
 
int32_t main()
{	
	ios_base::sync_with_stdio(false);
    cin.tie(NULL);
	  
	int n,q;
	cin>>n>>q;
	for(int i=1;i<=n;i++) cin>>a[i];
	Build(1,1,n);
	for(int i=1;i<=q;i++)
	{	
		int type;
		cin>>type;
		if(type==1)
		{
				int x,y;
				cin>>x>>y;
				Update(1,x,y,1,n);
		}
		else
		{	
			int x,y;
			cin>>x>>y;
			cout<<query(x,y,1,n,1)<<"\n";
		}
	
		//cout<<"x="<<x<<" y="<<y<<"\n";
//		cout<<query(x,y,1,n,1)<<"\n";	
	}
	
}
